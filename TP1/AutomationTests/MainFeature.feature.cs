// --------------------------------------------------------------------------------------------------------------------
// <copyright company="Team Alpha Solutions" file="MainFeature.feature.cs">
//   Copyright © 2014 Team Alpha Solutions
// </copyright>
// <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// <summary>
//   The main feature feature.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

#region Designer generated code


#pragma warning disable

namespace AutomationTests
{
    using TechTalk.SpecFlow;

    /// <summary>
    /// The main feature feature.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MainFeature")]
    public partial class MainFeatureFeature
    {
        /// <summary>
        /// The test runner.
        /// </summary>
        private static ITestRunner testRunner;

#line 1 "MainFeature.feature"
#line hidden

        /// <summary>
        /// The feature setup.
        /// </summary>
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(
                new System.Globalization.CultureInfo("en-US"), 
                "MainFeature", 
                "In order to use this site\r\nAs a regular user\r\nI want to see index page.", 
                ProgrammingLanguage.CSharp, 
                (string[])(null));
            testRunner.OnFeatureStart(featureInfo);
        }

        /// <summary>
        /// The feature tear down.
        /// </summary>
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        /// <summary>
        /// The test initialize.
        /// </summary>
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        /// <summary>
        /// The scenario tear down.
        /// </summary>
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        /// <summary>
        /// The scenario setup.
        /// </summary>
        /// <param name="scenarioInfo">
        /// The scenario info.
        /// </param>
        public virtual void ScenarioSetup(ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        /// <summary>
        /// The scenario cleanup.
        /// </summary>
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        /// <summary>
        /// The navigate to index page.
        /// </summary>
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to index page")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void NavigateToIndexPage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to index page", new[] { "mytag" });
#line 7
            this.ScenarioSetup(scenarioInfo);
#line 8
            testRunner.Given(
                "I have navigated to the site", 
                (string)(null), 
                (TechTalk.SpecFlow.Table)(null), 
                "Given ");
#line 9
            testRunner.Then(
                "the title should be displayed on the screen", 
                (string)(null), 
                (TechTalk.SpecFlow.Table)(null), 
                "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion